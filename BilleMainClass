//AUTHOR: Destiny Bille
//CLASS: CPT 167
//PURPOSE: The purpose of this program is to allow users to make multiple purchase, print receipts, and keep track of the amount of purchases made.
//START DATE: 11/30/2021
package edu.cpt167.bille.exercise6;

//import the scanner
import java.util.Scanner;

//BEGINNING OF main class
public class BilleMainClass 
{
	//declare and initialize all class constants
	public static final double TAX_RATE = 0.075;
	public static final String DISCOUNT_NAME_MEMBER = "Member";
	public static final String DISCOUNT_NAME_SENIOR = "Senior";
	public static final String DISCOUNT_NAME_NONE = "No Discount";
	public static final String DISCOUNT_NAME_QUIT = "Quit";
	public static final double DISCOUNT_RATE_MEMBER = 0.15;
	public static final double DISCOUNT_RATE_SENIOR = 0.25;
	public static final double DISCOUNT_RATE_NONE = 0.0;
	public static final String ITEM_NAME_PREMIUM = "Premium";
	public static final String ITEM_NAME_SPECIAL = "Special";
	public static final String ITEM_NAME_BASIC = "Basic";
	public static final String ITEM_NAME_RETURN = "Return to Main Menu";
	public static final double ITEM_PRICE_PREMIUM = 55.95;
	public static final double ITEM_PRICE_SPECIAL = 24.95;
	public static final double ITEM_PRICE_BASIC = 15.95;
	public static final int RESET_VALUE = 0;

	//BEGINNING OF main method
	public static void main(String[] args) 
	{
		//declare and initialize the scanner
		Scanner input = new Scanner(System.in);

		//declare and initialize local variables
		String userName = "";
		char rateSelection = ' ';
		char itemSelection = ' ';
		int howMany = 0;
		String discountName = "";
		double discountRate = 0.0;
		String itemName = "";
		double itemPrice = 0.0;
		double discountAmount = 0.0;
		double discountPrice = 0.0;
		double subTotal = 0.0;
		double tax = 0.0;
		double totalCost = 0.0;
		int memberCount = 0;
		int seniorCount = 0;
		int noDiscountCount = 0;
		double grandTotal = 0.0;
		int premiumCount = 0;
		int specialCount = 0;
		int basicCount = 0;
		double purchaseAmt = 0.0;

		//display the welcome banner
		displayWelcomeBanner();
		
		//prompts for user name
		userName = getUserName(input);
		
		//PRIME READ of main/discount menu
		rateSelection = validateMainMenu(input);
		
		//repetition structure
		//run-while loop NOT quit loop
		while(rateSelection != 'Q')
		{
			//PRIME READ of item menu
			itemSelection = validateItemMenu(input);
			
			//repetition structure
			//run-while loop for NOT return
			while(itemSelection != 'R')
			{
				//prompts user for howMany
				howMany = validateHowMany(input);
				
				//process selection structure
				//test to see which discount to assign
				if(rateSelection == 'A')
				{
					//assignment statements
					discountName = DISCOUNT_NAME_MEMBER;
					discountRate = DISCOUNT_RATE_MEMBER;
					memberCount++;
				}//END OF if selection A
				//else if selection B
				else if(rateSelection == 'B')
				{
					//assignment statements
					discountName = DISCOUNT_NAME_SENIOR;
					discountRate = DISCOUNT_RATE_SENIOR;
					seniorCount++;
				}//END OF if selection B
				//else selection C
				else
				{
					discountName = DISCOUNT_NAME_NONE;
					discountPrice = DISCOUNT_RATE_NONE;
					noDiscountCount++;
				}//END OF if selection C
				
				//process selection structure
				//test to see which item to assign
				if(itemSelection == 'A')
				{
					//assignment statements
					itemName = ITEM_NAME_PREMIUM;
					itemPrice = ITEM_PRICE_PREMIUM;
					premiumCount++;
				}//END OF if selection A
				//if selection B
				else if(itemSelection == 'B')
				{
					//assignment statements
					itemName = ITEM_NAME_SPECIAL;
					itemPrice = ITEM_PRICE_SPECIAL;
					specialCount++;
				}//END OF if selection B
				//else selection C
				else
				{
					//assignment statements
					itemName = ITEM_NAME_BASIC;
					itemPrice = ITEM_PRICE_BASIC;
					basicCount++;
				}//END OF is selection C
				
				//assignment statements for item receipt
				discountAmount = itemPrice * discountRate;
				discountPrice = itemPrice - discountAmount;
				purchaseAmt = howMany * discountPrice;
				subTotal = subTotal + purchaseAmt;
				
				//display item report
				displayItemReceipt(itemName, itemPrice, discountName, discountRate, discountAmount, discountPrice, howMany, purchaseAmt, subTotal);
				
				//reprint item menu and prompt for selection
				itemSelection = validateItemMenu(input);
			}//END OF run-while NOT return
			
			//assignment statements for order report
			tax = subTotal * TAX_RATE;
			totalCost = subTotal + tax;
			grandTotal = grandTotal + totalCost;
			
			//display order report
			displayOrderTotal(userName, subTotal, tax, totalCost);
			
			//assignment statement for reset value
			subTotal = RESET_VALUE;
			
			//reprint discount menu and prompt for selection
			rateSelection = validateMainMenu(input);
		}//END OF run-while NOT quit
		
		//process selection structure
		//test to see if final report displays
		if(grandTotal > 0.0)
		{
			//display final report
			displayFinalReport(memberCount, seniorCount, noDiscountCount, premiumCount, specialCount, basicCount, grandTotal);
		}//END OF if final report
		
		//display farewell message
		displayFarewellMessage();
		
		//close the scanner
		input.close();
	}//END OF main method

	//VOID METHODS
	
	//void method to display welcome banner
	public static void displayWelcomeBanner()
	{
		System.out.println("Welcome to Sod Sisters!");
		System.out.println("This program will allow users to process sales");
		System.out.println("and will report the overall total for sales.");
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~~\n");
	}//END OF void method welcome banner

	//void method to display farewell message
	public static void displayFarewellMessage()
	{
		System.out.println("\n~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~~");
		System.out.println("Thank you for choosing Sod Sisters!");
		System.out.println("Have a wonderful day.");
	}//END OF void method farewell message

	//void method to display item report
	public static void displayItemReceipt(String borrowedItemName, double borrowedItemPrice, String borrowedDiscountName, double borrowedDiscountRate,
			double borrowedDiscountAmount, double borrowedDiscountPrice, int borrowedHowMany, double borrowedPurchaseAmt, double borrowedSubTotal)
	{
		System.out.println("\n~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~~");
		System.out.println("ITEM REPORT");
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~~");
		System.out.printf("%-20s%-40s\n", "Item Name", borrowedItemName);
		System.out.printf("%-20s%-2s%8.2f\n", "Original Price", "$", borrowedItemPrice);
		System.out.printf("%-20s%-40s\n", "Discount Type", borrowedDiscountName);
		System.out.printf("%-20s%9.1f%-2s\n", "Discount Rate", borrowedDiscountRate * 100, "%");
		System.out.printf("%-20s%-2s%8.2f\n", "Discount Amount", "$", borrowedDiscountAmount);
		System.out.printf("%-20s%-2s%8.2f\n", "Discounted Price", "$", borrowedDiscountPrice);
		System.out.printf("%-20s%10d\n", "Quantity", borrowedHowMany);
		System.out.printf("%-20s%-2s%8.2f\n", "Purchase Amount", "$", borrowedPurchaseAmt);
		System.out.printf("%-20s%-2s%8.2f\n", "Subtotal", "$", borrowedSubTotal);
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~~");
	}//END OF void method item report

	//void method to display order report
	public static void displayOrderTotal(String borrowedUserName, double borrowedSubTotal, double borrowedTax, double borrowedTotalCost)
	{
		System.out.println("\n~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~~");
		System.out.println("ORDER REPORT");
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~~");
		System.out.printf("%-15s%-45s\n", "User", borrowedUserName);
		System.out.printf("%-15s%-2s%10.2f\n", "Subtotal", "$", borrowedSubTotal);
		System.out.printf("%-15s%-2s%10.2f\n", "Tax", "$", borrowedTax);
		System.out.printf("%-15s%-2s%10.2f\n", "Total Cost", "$", borrowedTotalCost);
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~~");
	}//END OF void method order report

	//void method to display final report
	public static void displayFinalReport(int borrowedMemberCount, int borrowedSeniorCount, int borrowedNoDiscountCount, int borrowedPremiumCount,
			int borrowedSpecialCount, int borrowedBasicCount, double borrowedGrandTotal)
	{
		System.out.println("\n~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~~");
		System.out.println("FINAL REPORT");
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~~");
		System.out.printf("%-60s\n", "Count of discount types:");
		System.out.printf("%-15s%15d\n", DISCOUNT_NAME_MEMBER, borrowedMemberCount);
		System.out.printf("%-15s%15d\n", DISCOUNT_NAME_SENIOR, borrowedSeniorCount);
		System.out.printf("%-15s%15d\n", DISCOUNT_NAME_NONE, borrowedNoDiscountCount);
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~~");
		System.out.printf("%-60s\n", "Count of item types:");
		System.out.printf("%-15s%15d\n", ITEM_NAME_PREMIUM, borrowedPremiumCount);
		System.out.printf("%-15s%15d\n", ITEM_NAME_SPECIAL, borrowedSpecialCount);
		System.out.printf("%-15s%15d\n", ITEM_NAME_BASIC, borrowedBasicCount);
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~~");
		System.out.printf("%-15s%6s%9.2f\n", "Grand Total", "$", borrowedGrandTotal);
		System.out.println("~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~ ~~~~~~");
	}//END OF void method final report

	//void method to display discount menu
	public static void displayMainMenu()
	{
		System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		//menu title
		System.out.println("DISCOUNT MENU");
		//menu options
		System.out.printf("%-8s%-15s%5.1f%-2s\n", "[A] for", DISCOUNT_NAME_MEMBER, DISCOUNT_RATE_MEMBER * 100, "%");
		System.out.printf("%-8s%-15s%5.1f%-2s\n", "[B] for", DISCOUNT_NAME_SENIOR, DISCOUNT_RATE_SENIOR * 100, "%");
		System.out.printf("%-8s%-15s%5.1f%-2s\n", "[C] for", DISCOUNT_NAME_NONE, DISCOUNT_RATE_NONE * 100, "%");
		System.out.printf("%-8s%-15s\n", "[Q] for", DISCOUNT_NAME_QUIT);
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		//prompts user for rate selection
		System.out.print("Enter your selection here: ");
	}//END OF void method discount menu

	//void method to display item menu
	public static void displayItemMenu()
	{
		System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		//menu title
		System.out.println("ITEM MENU");
		//menu options
		System.out.printf("%-8s%-15s%-2s%6.2f\n", "[A] for", ITEM_NAME_PREMIUM, "$", ITEM_PRICE_PREMIUM);
		System.out.printf("%-8s%-15s%-2s%6.2f\n", "[B] for", ITEM_NAME_SPECIAL, "$", ITEM_PRICE_SPECIAL);
		System.out.printf("%-8s%-15s%-2s%6.2f\n", "[C] for", ITEM_NAME_BASIC, "$", ITEM_PRICE_BASIC);
		System.out.printf("%-7s%-15s\n", "[R] to", ITEM_NAME_RETURN);
		System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		//prompts user for item selection
		System.out.print("Enter your selection here: ");
	}//END OF void method item menu

	//VR METHODS

	//VR method to get user name
	public static String getUserName(Scanner borrowedInput)
	{
		//declare local variable
		String localUserName = "";

		//prompts user for userName
		System.out.print("Enter your first name here: ");
		//assignment statement
		localUserName = borrowedInput.nextLine();

		//return
		return localUserName;
	}//END OF VR method user name

	//VR method to receive and validate discount menu selection
	public static char validateMainMenu(Scanner borrowedInput)
	{
		//declare local variables
		char localSelection = ' ';

		//display discount menu
		displayMainMenu();

		//assignment statement
		localSelection = borrowedInput.next().toUpperCase().charAt(0);

		//repetition structure
		//validation loop for rate selection
		while (localSelection != 'A' && localSelection != 'B' && localSelection != 'C' && localSelection != 'Q')
		{
			//error message
			System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.println("The selection made is invalid. Please try again.");
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");

			//REPRINT discount menu
			displayMainMenu();
			//modify the LCV
			localSelection = borrowedInput.next().toUpperCase().charAt(0);
		}//END OF discount rate validation

		//return
		return localSelection;
	}//END OF VR method validateMainMenu

	//VR method to receive and validate item menu selection
	public static char validateItemMenu(Scanner borrowedInput)
	{
		//declare local variables
		char localSelection = ' ';
		
		//display item menu
		displayItemMenu();
		
		//assignment statement
		localSelection = borrowedInput.next().toUpperCase().charAt(0);
		
		//repetition structure
		//validation loop for item selection
		while (localSelection != 'A' && localSelection != 'B' && localSelection != 'C' && localSelection != 'R')
		{
			//error message
			System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.println("The selection made is invalid. Please try again.");
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			
			//REPRINT the item menu
			displayItemMenu();
			//prompts user for item selection and modify the LCV
			System.out.print("Enter your selection here: ");
			localSelection = borrowedInput.next().toUpperCase().charAt(0);
		}//END OF item selection validation
		
		//return
		return localSelection;
	}//END OF VR method validateItemMenu
	
	//VR method to receive and validate how many
	public static int validateHowMany(Scanner borrowedInput)
	{
		//declare all local variables
		int localHowMany = 0;
		
		//prompts user for how many items
		System.out.print("\nEnter the number of items: ");
		//assignment statement
		localHowMany = borrowedInput.nextInt();
		
		//repetition structure
		//validation loop for how many
		while (localHowMany <= 0)
		{
			//error message
			System.out.println("\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			System.out.println("The value entered is invalid. Please try again.");
			System.out.println("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
			
			//reprint prompt for how many and modify the LCV
			System.out.print("Enter the number of items: ");
			localHowMany = borrowedInput.nextInt();
		}//END OF how many validation
		
		//return
		return localHowMany;
	}//END OF VR method validateHowMany

}//END OF main class
